name: Android Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create release keystore
        env:
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        run: |
          echo "$RELEASE_KEYSTORE" | base64 -d > android/app/release.keystore

      - name: Create .env file
        env:
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          echo "ANDROID_STORE_PASSWORD=$ANDROID_STORE_PASSWORD" > .env
          echo "ANDROID_KEY_ALIAS=$ANDROID_KEY_ALIAS" >> .env
          echo "ANDROID_KEY_PASSWORD=$ANDROID_KEY_PASSWORD" >> .env

      - name: Build Release APK
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Build Release Bundle
        run: |
          cd android
          ./gradlew bundleRelease

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          files: |
            android/app/build/outputs/apk/release/app-release.apk
            android/app/build/outputs/bundle/release/app-release.aab
          body: |
            Release ${{ steps.get_version.outputs.VERSION }}
            
            ### Installation
            - Download and install the APK on your Android device
            - Alternatively, wait for the Play Store release
            
            ### Note
            The AAB file is for Play Store submission only. For direct installation, use the APK.
